function isUrlValid(e){let t;try{t=new URL(e)}catch(e){return!1}return"http:"===t.protocol||"https:"===t.protocol}const time_mode_radios=Array.from(document.querySelectorAll('input[type="radio"][name="time_mode"]')),time_container=document.getElementById("time-container"),google_microdata_button=(time_mode_radios.forEach(e=>{e.addEventListener("input",()=>{"time-mode-regular"===time_mode_radios.filter(e=>e.checked)[0].id?time_container.classList.remove("dcf-d-none"):time_container.classList.add("dcf-d-none")})}),document.getElementById("google-microdata-button"));function testMicrodata(e=!0){let t=!0;const a=document.getElementById("google-microdata-button"),i=document.getElementById("google-microdata-modal-output");let n="";var o,l,r,d=document.getElementById("title"),s=document.getElementById("start-date"),c=document.getElementById("physical_location_check"),u=document.getElementById("virtual_location_check"),m=document.getElementById("contact-name"),v=document.getElementById("contact-website"),p=document.querySelector('input[name="contact_type"]:checked');""==d.value&&(e&&(n+="<li>Missing title</li>"),t=!1),""==s.value&&(e&&(n+="<li>Missing start date</li>"),t=!1),"0"==c.value&&"0"==u.value&&(e&&(n+="<li>Missing a location (Could be virtual, physical, or both)</li>"),t=!1),"1"==c.value&&("new"==(d=document.getElementById("location")).value?(s=document.getElementById("location-name"),c=document.getElementById("location-address-1"),o=document.getElementById("location-city"),l=document.getElementById("location-state"),r=document.getElementById("location-zip"),""==s.value&&(e&&(n+="<li>Missing a location name</li>"),t=!1),""==c.value&&(e&&(n+="<li>Missing a location address</li>"),t=!1),""==o.value&&(e&&(n+="<li>Missing a location city</li>"),t=!1),""==l.value&&(e&&(n+="<li>Missing a location state</li>"),t=!1),""==r.value&&(e&&(n+="<li>Missing a location zip</li>"),t=!1)):"true"!=d.options[d.selectedIndex].dataset.microdata&&(e&&(n+="<li>The Location you selected does not meet the requirements for microdata</li>"),t=!1)),"1"==u.value&&"new"==document.getElementById("v-location").value&&(s=document.getElementById("new-v-location-name"),c=document.getElementById("new-v-location-url"),""==s.value&&(e&&(n+="<li>Missing a virtual location name</li>"),t=!1),""==c.value&&(e&&(n+="<li>Missing a virtual location URL</li>"),t=!1),""==c.value||isUrlValid(c.value)||(e&&(n+="<li>Virtual location's URL is invalid</li>"),t=!1)),""===m.value&&""===v.value||(null===p&&(e&&(n+="<li>If organizer contact info is used the type must be specified</li>"),t=!1),(""!==m.value&&""===v.value||""===m.value&&""!==v.value)&&(e&&(n+="<li>Both the organizer name and organizer website must be set if either are used</li>"),t=!1)),t?(e&&(i.innerHTML="<span class='dcf-bold'>Your event is fulfilling all microdata requirements</span>"),a.innerHTML="Your event does reach microdata requirements",a.classList.remove("unl-bg-blue"),a.classList.add("unl-bg-green"),a.classList.remove("events-b-blue"),a.classList.add("events-b-green")):(e&&(i.innerHTML="<span class='dcf-bold'>Your event is missing these requirements:</span> <ul>"+n+"</ul>"),a.innerHTML="! Your event does not reach microdata requirements !",a.classList.add("unl-bg-blue"),a.classList.remove("unl-bg-green"),a.classList.add("events-b-blue"),a.classList.remove("events-b-green"))}document.addEventListener("ModalOpenEvent_"+google_microdata_button.dataset.togglesModal,()=>{testMicrodata(!0)}),document.addEventListener("click",e=>{testMicrodata(!1)}),document.addEventListener("input",e=>{testMicrodata(!1)}),document.getElementById("start-date").addEventListener("change",e=>{testMicrodata(!1)}),testMicrodata(!1),require(["jquery","wdn"],function(l,e){e.initializePlugin("modals"),l("input[type=radio][name=send_to_main]").change(function(){"on"==this.value?l(".required-for-main-calendar").show():"off"==this.value&&l(".required-for-main-calendar").hide()}),l("#create-event-form").submit(function(e){let i=[],n=(""!=l("#title").val()&&""!=l("#type").find(":selected").val()&&""!=l("#start-date").val()||(""==l("#title").val()&&notifier.mark_input_invalid(l("#title")),""==l("#start-date").val()&&notifier.mark_input_invalid(l("#start-date")),""==l("#type").find(":selected").val()&&notifier.mark_input_invalid(l("#type")),i.push('<a href="#title">Title</a>, <a href="#type">Type</a>, and <a href="#start-date">start date</a> are required.')),new Date(l("#start-date").val()));if(""!=l("#start-date").val()&&""!=l("#end-date").val()){let e=new Date(l("#end-date").val());var o=l("#start-time-am-pm-pm").is(":checked")?"pm":"am";let t=""!=l("#start-time-hour").val()?parseInt(l("#start-time-hour").val())%12:0;t="pm"==o?t+12:t;o=""!=l("#start-time-minute").val()?parseInt(l("#start-time-minute").val()):0,o=(n.setHours(t),n.setMinutes(o),l("#end-time-am-pm-pm").is(":checked")?"pm":"am");let a=""!=l("#end-time-hour").val()?parseInt(l("#end-time-hour").val())%12:0;a="pm"==o?a+12:a;o=""!=l("#end-time-minute").val()?parseInt(l("#end-time-minute").val()):0;e.setHours(a),e.setMinutes(o),n>e&&(notifier.mark_input_invalid(l("#end-date")),i.push('Your <a href="#end-date">end date/time</a> must be on or after the <a href="#start-date">start date/time</a>.'))}if(""!=l("#start-date").val()&&l("#recurring").is(":checked")){if(""!=l("#recurring-type").val()&&""!=l("#recurs-until-date").val()||(""==l("#recurring-type").val()&&notifier.mark_input_invalid(l("#recurring-type")),""==l("#recurs-until-date").val()&&notifier.mark_input_invalid(l("#recurs-until-date")),i.push('Recurring events require a <a href="#recurring-type">recurring type</a> and <a href="#recurs-until-date">date</a> that they recur until.')),""!=l("#end-date").val()){let e=new Date(l("#start-date").val()),t=new Date(l("#end-date").val());e&&t&&e.getDate()!=t.getDate()&&i.push("A recurring event instance start and end date must be the same day. If you need multiple multi-day (ongoing) occurrences, you must define them as separate datetime instances.")}n.setHours(0),n.setMinutes(0);o=new Date(l("#recurs-until-date").val());n>o&&(notifier.mark_input_invalid(l("#recurs-until-date")),i.push('The <a href="#recurs-until-date">"recurs until date"</a> must be on or after the start date.'))}"1"==l("#physical_location_check").val()&&("new"==l("#location").val()&&""==l("#location-name").val()&&(notifier.mark_input_invalid(l("#location-name")),i.push('You must give your new location a <a href="#location-name">name</a>.')),"new"==l("#location").val()&&""==l("#location-address-1").val()&&(notifier.mark_input_invalid(l("#location-address-1")),i.push('You must give your new location a <a href="#location-address-1">address</a>.')),"new"==l("#location").val()&&""==l("#location-city").val()&&(notifier.mark_input_invalid(l("#location-city")),i.push('You must give your new location a <a href="#location-city">city</a>.')),"new"==l("#location").val()&&""==l("#location-state").val()&&(notifier.mark_input_invalid(l("#location-state")),i.push('You must give your new location a <a href="#location-state">state</a>.')),"new"==l("#location").val()&&""==l("#location-zip").val()&&(notifier.mark_input_invalid(l("#location-zip")),i.push('You must give your new location a <a href="#location-zip">zip</a>.')),"new"!=l("#location").val()||""===l("#location-webpage").val()||isUrlValid(l("#location-webpage").val())||(notifier.mark_input_invalid(l("#location-webpage")),i.push('<a href="#location-webpage"> Location URL</a> is not a valid URL.'))),"1"==l("#virtual_location_check").val()&&("new"==l("#v-location").val()&&""==l("#new-v-location-name").val()&&(notifier.mark_input_invalid(l("#new-v-location-name")),i.push('You must give your new virtual location a <a href="#new-v-location-name">name</a>.')),"new"==l("#v-location").val()&&""==l("#new-v-location-url").val()?(notifier.mark_input_invalid(l("#new-v-location-url")),i.push('You must give your new virtual location a <a href="#new-v-location-url">URL</a>.')):"new"!=l("#v-location").val()||""===l("#new-v-location-url").val()||isUrlValid(l("#new-v-location-url").val())||(notifier.mark_input_invalid(l("#new-v-location-url")),i.push('<a href="#new-v-location-url">Virtual Location URL</a> is not a valid URL.'))),void 0===l('input[name="send_to_main"]:checked').val()?(notifier.mark_input_invalid(l("#send_to_main_on")),i.push('<a href="#send_to_main">Consider for main calendar</a> is required.')):"on"===l('input[name="send_to_main"]:checked').val()&&(""==l("#description").val().trim()&&(notifier.mark_input_invalid(l("#description")),i.push('<a href="#description">Description</a> is required when event is considered for main calendar.')),""==l("#contact-name").val().trim()&&(notifier.mark_input_invalid(l("#contact-name")),i.push('<a href="#contact-name">Contact Name</a> is required when event is considered for main calendar.')),""==l("#cropped-image-data").val().trim()&&""==l("#imagedata").val().trim()&&(notifier.mark_input_invalid(l("#imagedata")),i.push('<a href="#imagedata">Image</a> is required when event is considered for main calendar.'))),void 0!==l('input[name="contact_type"]:checked').val()&&"person"!==l('input[name="contact_type"]:checked').val()&&"organization"!==l('input[name="contact_type"]:checked').val()&&(notifier.mark_input_invalid(l("#contact-type")),i.push('<a href="#contact-type">Contact Type</a> must be person or organization.'));o=l("#contact-website").val(),""==o||isUrlValid(o)||(notifier.mark_input_invalid(l("#contact-website")),i.push('<a href="#contact_website">Contact Website</a> is not a valid URL.')),o=l("#website").val();""==o||isUrlValid(o)||(notifier.mark_input_invalid(l("#website")),i.push('<a href="#website">Event Website</a> is not a valid URL.')),0<i.length&&(e.preventDefault(),notifier.alert("Sorry! We couldn't create your event","<ul><li>"+i.join("</li><li>")+"</li></ul>"))})});